'***************************************  Robot Setup Program  ***************************************
' File:			ROBOT_SETUP.PRG
' Purpose:		Axes setup example
' Version:		V1.0.0.0
' History:		12:40:54 25/11/2020 - V1.0.0.0 Created
' Author:		AUTOMATICALLY GENERATED by ROBOT_SETUP_Gen.py
' Description:	This script configures each robot' parameters according to the user's specifications in
'				the softMC Configurator.
'
' Global Variables Used: num_Of_Motion_Drives as long  - Number of ECat Motion Drives found by EC_SETUP.PRG
'						Axes[64] - An array that holds all the axes in the system. Defined in CONFIG.PRG
'********************************************************************************************************

' module global variables
import_c PUMA_SET_THETA(byval as long, byval as long,byval as double) as double
import_c SCARA_SET_THETA(byval as long, byval as long,byval as double) as double

common shared ROBOT_PRG_error_code as long
common shared ROBOT_PRG_error_str as string

common shared ERR_ROBOT_SETUP as error "ERROR SETTING UP robot " 20766

common shared dHomingFactorFast as double = 0.5
common shared total_dh as double
common shared dHomingFactorslow as double = 0.25
common shared dHomingFactorAcc as double = 0.1
common shared dSec2msec as double = 1000  '  this is used to convert from typical user time-units [msec] to typical drive time-units [sec]
common shared dHomingVelocity as double
common shared dHomingAcceleration as double
common shared dVelocityLimit as double
common shared dDrivePeMax as double
common shared mm_to_inch as double = 0.0393701
common shared help as double = 1

Program

dim retStr as string
dim dummy as long

	TRY

		load CALIBVAL.PRG
		Stas CALIBVAL.PRG

		while CALIBVAL.PRG.state <> 10
			sleep 10
		End while
	catch 4033
	end try

	if Execute_VES("with Robot", 1) <> 0 then
		throw ERR_ROBOT_SETUP
	end if

	with Robot
	Attach Robot

	cplg[1][1] = 1
	cplg[1][2] = 0
	cplg[1][3] = 0
	cplg[1][4] = 0
	cplg[1][5] = 0
	'***************************************
	cplg[2][1] = 0
	cplg[2][2] = 1
	cplg[2][3] = 0
	cplg[2][4] = 0
	cplg[2][5] = 0
	'***************************************
	cplg[3][1] = 0
	cplg[3][2] = 0
	cplg[3][3] = 1
	cplg[3][4] = 0
	cplg[3][5] = 0
	'***************************************
	cplg[4][1] = 0
	cplg[4][2] = 0
	cplg[4][3] = 0
	cplg[4][4] = 1
	cplg[4][5] = 0
	'***************************************
	cplg[5][1] = 0
	cplg[5][2] = 0
	cplg[5][3] = 0
	cplg[5][4] = 0
	cplg[5][5] = 1
	'***************************************
	Coupled = True

	j1.pmin =0
	j1.pmax =1000

	j2.pmin =0
	j2.pmax =1000

	j3.pmin =0
	j3.pmax =1000

	j4.pmin =0
	j4.pmax =1000

	j5.pmin =0
	j5.pmax =1000

	if Execute_VES("VelocityFactor = 0.001", 1685) <> 0 then
	throw ERR_ROBOT_SETUP
	end if

	if Execute_VES("AccelerationFactor = 1e-6", 1686) <> 0 then
	throw ERR_ROBOT_SETUP
	end if

	if Execute_VES("JerkFactor = 1e-9", 1687) <> 0 then
	throw ERR_ROBOT_SETUP
	end if

	if Execute_VES("PositionErrorDelay = 4.11", 1688) <> 0 then
	throw ERR_ROBOT_SETUP
	end if

	if Execute_VES("Absolute = 1", 1689) <> 0 then
	throw ERR_ROBOT_SETUP
	end if

	if Execute_VES("VelocityOverride = 100.0", 1690) <> 0 then
	throw ERR_ROBOT_SETUP
	end if

	if Execute_VES("SmoothFactor = -1", 1691) <> 0 then
	throw ERR_ROBOT_SETUP
	end if

	if Execute_VES("ProfilerType = -1", 1692) <> 0 then
	throw ERR_ROBOT_SETUP
	end if

	if Execute_VES("PayloadInertia = 0", 1693) <> 0 then
	throw ERR_ROBOT_SETUP
	end if

	if Execute_VES("PayloadMass = 0", 1694) <> 0 then
	throw ERR_ROBOT_SETUP
	end if

	if Execute_VES("PayloadMax = 10", 1695) <> 0 then
	throw ERR_ROBOT_SETUP
	end if

	configgroup

	if Execute_VES("PositionErrorMax = 1", 1696) <> 0 then
	throw ERR_ROBOT_SETUP
	end if

	if Execute_VES("PositionErrorSettle = 0.025", 1697) <> 0 then
	throw ERR_ROBOT_SETUP
	end if

	if Execute_VES("VelocityCruise = 30", 1698) <> 0 then
	throw ERR_ROBOT_SETUP
	end if

	if Execute_VES("Acceleration = 3000", 1699) <> 0 then
	throw ERR_ROBOT_SETUP
	end if

	if Execute_VES("Deceleration = 3000", 1700) <> 0 then
	throw ERR_ROBOT_SETUP
	end if

	if Execute_VES("Jerk = 45000", 1701) <> 0 then
	throw ERR_ROBOT_SETUP
	end if

	if Execute_VES("VelocityMax = 300", 1702) <> 0 then
	throw ERR_ROBOT_SETUP
	end if

	if Execute_VES("AccelerationMax = 3000", 1703) <> 0 then
	throw ERR_ROBOT_SETUP
	end if

	if Execute_VES("DecelerationMax = 3000", 1704) <> 0 then
	throw ERR_ROBOT_SETUP
	end if

	if Execute_VES("DecStop = 1.5*DecelerationMax", 1705) <> 0 then
	throw ERR_ROBOT_SETUP
	end if

	if Execute_VES("JerkMax = 45000", 1706) <> 0 then
	throw ERR_ROBOT_SETUP
	end if

	detach

	if Execute_VES("end with ", 1) <> 0 then
		throw ERR_ROBOT_SETUP
	end if

	end with

End program

function Execute_VES(byval command as string, byval err_code as long) as long

	dim retStr as string

	Execute_VES = 0
	ROBOT_PRG_error_code = 0
	retStr = VesExecute(command)

	if INSTR(retStr, "E:Error") <> 0  then

		ROBOT_PRG_error_code = err_code
		ROBOT_PRG_error_str = retStr
		Execute_VES = -1

	end if

end function

