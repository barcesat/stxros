'***************************************  CAN Setup Program  ***************************************
' File:			CAN.PRG
' Purpose:		CAN setup example
' Version:		V1.0.0.0
' History:		12:40:54 25/11/2020 - V1.0.0.0 Created
' Author:		AUTOMATICALLY GENERATED by CAN_SETUP_Gen.py
' Description:	This script demonstrates how to setup the CAN module, which function/subroutines to invoke,
'				and in what order.
'
'********************************************************************************************************

import_c  SET_CONTROL_PDO_DADD(byval as long,byval as long,byval as long,byval as long)
import_c  SET_STATUS_PDO_DADD(byval as long,byval as long,byval as long,byval as long)
import_c  SET_PCMD_PDO_DADD(byval as long,byval as long,byval as long,byval as long)
import_c  SET_PFB_PDO_DADD(byval as long,byval as long,byval as long,byval as long)
import_c  SET_VCMD_PDO_DADD(byval as long,byval as long,byval as long,byval as long)
import_c  SET_VFB_PDO_DADD(byval as long,byval as long,byval as long,byval as long)
import_c  SET_TCMD_PDO_DADD(byval as long,byval as long,byval as long,byval as long)
import_c  SET_TDCMD_PDO_DADD(byval as long,byval as long,byval as long,byval as long)
import_c  SET_CFB_PDO_DADD(byval as long,byval as long,byval as long,byval as long)
import_c  SET_ADDTCMD_PDO_DADD(byval as long,byval as long,byval as long,byval as long)
import_c  SET_DOUT_RANGE_PDO_DADD(byval as long,byval as long,byval as long,byval as long,byval as long,byval as long,byval as long)
import_c  SET_DIN_RANGE_PDO_DADD(byval as long,byval as long,byval as long,byval as long,byval as long,byval as long,byval as long)
import_c SDO_TIME_OUT_SET(byval as long)
import_c SDO_TIME_OUT_GET() as long

 ' module global variables
common shared CANSETUP_PRG_error_code as long = 0
common shared CANSETUP_PRG_error_str as string = ""
common shared numOfSlaves as long = 0
common shared num_Of_Motion_Drives as long = 0

common shared ERR_CAN_SETUP as error "ERROR SETTING UP CAN. CHECK CANSETUP_PRG_error_code/CANSETUP_PRG_error_STR" 20769

dim shared Note_PLL_Error_Retry as note "PLL Error in the drives. Restarting CAN_SETUP.PRG" 20300

Program

	dim Counts_Per_Revolution as long = 10000  '  Set to 10000 by default for a generic drive
	dim CAN_setup_iterations as long = 1
	dim retVal as long = 0
	dim retStr as string = ""
	dim drive_addr as long = 0
	dim PLL_Error as long = 0


	retStr = VesExecute("CONFIG_PRG_SUCCESS = 0")

START_CAN_SETUP_PRG:

	 Call CAN_SEPARATOR(0)
	' Map PDO entries of the devices
	bus[1].ctim =1000*4
	bus[1].phase = 0
	call CAN_SDO_WRITE(1 , 0x60c2, 1 , 8 , bus[1].ctim/1000)
 	call Clear_Drive(1 )
	' Clear faults 
	call can_sdo_write( 1, 0x6040, 0, 16 , 128)
	call can_sdo_write( 1, 0x6040, 0, 16 , 0)


	if PDO_Mapping_Device_1 = -1 then
		throw ERR_CAN_SETUP
	end if

	call CAN_SDO_WRITE(2 , 0x60c2, 1 , 8 , bus[1].ctim/1000)
 	call Clear_Drive(2 )
	' Clear faults 
	call can_sdo_write( 2, 0x6040, 0, 16 , 128)
	call can_sdo_write( 2, 0x6040, 0, 16 , 0)


	if PDO_Mapping_Device_2 = -1 then
		throw ERR_CAN_SETUP
	end if

	call CAN_SDO_WRITE(3 , 0x60c2, 1 , 8 , bus[1].ctim/1000)
 	call Clear_Drive(3 )
	' Clear faults 
	call can_sdo_write( 3, 0x6040, 0, 16 , 128)
	call can_sdo_write( 3, 0x6040, 0, 16 , 0)


	if PDO_Mapping_Device_3 = -1 then
		throw ERR_CAN_SETUP
	end if

	call CAN_SDO_WRITE(4 , 0x60c2, 1 , 8 , bus[1].ctim/1000)
 	call Clear_Drive(4 )
	' Clear faults 
	call can_sdo_write( 4, 0x6040, 0, 16 , 128)
	call can_sdo_write( 4, 0x6040, 0, 16 , 0)


	if PDO_Mapping_Device_4 = -1 then
		throw ERR_CAN_SETUP
	end if

	call CAN_SDO_WRITE(5 , 0x60c2, 1 , 8 , bus[1].ctim/1000)
 	call Clear_Drive(5 )
	' Clear faults 
	call can_sdo_write( 5, 0x6040, 0, 16 , 128)
	call can_sdo_write( 5, 0x6040, 0, 16 , 0)


	if PDO_Mapping_Device_5 = -1 then
		throw ERR_CAN_SETUP
	end if

	num_Of_Motion_Drives = 5
	'****************************************************************
	'																*
	'				PRE - OPERATIONAL CONFIGURATION					*
	' Configure each slave according to Vendor ID and Product Code  *
	'																*
	'****************************************************************


	' Invoke device 1 installation function 
	if INSTALL_DEVICE_1 = -1 then
		throw ERR_CAN_SETUP
	end if

	' Invoke device 2 installation function 
	if INSTALL_DEVICE_2 = -1 then
		throw ERR_CAN_SETUP
	end if

	' Invoke device 3 installation function 
	if INSTALL_DEVICE_3 = -1 then
		throw ERR_CAN_SETUP
	end if

	' Invoke device 4 installation function 
	if INSTALL_DEVICE_4 = -1 then
		throw ERR_CAN_SETUP
	end if

	' Invoke device 5 installation function 
	if INSTALL_DEVICE_5 = -1 then
		throw ERR_CAN_SETUP
	end if



	'****************************************************************
	'																*
	'					USER PREOP CONFIGURATION					*
	' Add code to CAN_USER_PREOP_CONFIG(byval drive_addr as long)	*
	'																*
	'****************************************************************
	' Create PDOs mapping, set bus cycle time, sync clocks between the master and the slaves,
	' raise slaves to OP-Mode and sets master's opmode to operational




	'****************************************************************
	'																*
	'					OPERATIONAL CONFIGURATION					*
	' Configure each slave according to Vendor ID and Product Code	*
	'																*
	'****************************************************************
	' SAFEOP state configuration - Add code to EC_USER_SAFEOP_CONFIG(byval drive_addr as long)
		'retVal = EC_USER_SAFEOP_CONFIG(drive_addr)

		' OP state configuration - Add code to EC_USER_OP_CONFIG(byval drive_addr as long)
		'retVal = EC_USER_OP_CONFIG(drive_addr)

	' Assign drive addresses to axes
	A1.busnumber = 1
	A1.dadd = 1
	A2.busnumber = 1
	A2.dadd = 2
	A3.busnumber = 1
	A3.dadd = 3
	A4.busnumber = 1
	A4.dadd = 4
	A5.busnumber = 1
	A5.dadd = 5

	print "CAN Setup Finished Successfully !"

CAN_SETUP_PRG_DONE:

End Program


' Invoke configuration functions for device 1
Function INSTALL_DEVICE_1 as long

	dim PNUM as long

	INSTALL_DEVICE_1 = 0

	if Set_PDOe_To_AxProps_Device_1 = -1 then
		INSTALL_DEVICE_1 = -1
		goto INSTALL_DEVICE_1_DONE
	end if

	if SDO_Config_Device_1 = -1 then
		INSTALL_DEVICE_1 = -1
		goto INSTALL_DEVICE_1_DONE
	end if


INSTALL_DEVICE_1_DONE:

End Function


 'Create PDO entries mapping of device 1
Function PDO_Mapping_Device_1 as long

	PDO_Mapping_Device_1 = 0

	' Zero number of entries in sync manager 2
	if Execute_VES("call CAN_SDO_WRITE(1, 0x1400, 1, 32, 0x80000000 +1+256+ 0x100)",1003) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	' Set PDOs in sync manager 2
	' Zero number of PDO entries in PDO 0x1600
	if Execute_VES("call CAN_SDO_WRITE(1, 0x1600, 0, 8, 0)", 1004) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	' Set PDO entries in PDO 0x1600
	if Execute_VES("call CAN_SDO_WRITE(1, 0x1600, 1, 32, 0x60400010)", 1005) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	SET_CONTROL_PDO_DADD(1, 0 ,0 , 0)

	SET_CONTROL_PDO_DADD(1, 256+0x100 ,0 , 2)

	if Execute_VES("call CAN_SDO_WRITE(1, 0x1600, 2, 32, 0x607A0020)", 1006) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	SET_PCMD_PDO_DADD(1,0,0,0)

	SET_PCMD_PDO_DADD(1, 256+0x100 , 2  , 4)

	' Set number of PDO entries in PDO 0x1600
	if Execute_VES("call CAN_SDO_WRITE(1, 0x1600, 0, 8, 2)", 1004) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	' Set number of PDOs in the sync manager
	if Execute_VES("call CAN_SDO_WRITE(1, 0x1400, 1, 32, 1+256+ 0x100)",1003) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	' Zero number of entries in sync manager 2
	if Execute_VES("call CAN_SDO_WRITE(1, 0x1401, 1, 32, 0x80000000 +1+512+ 0x100)",1003) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	' Set PDOs in sync manager 2
	' Zero number of PDO entries in PDO 0x1601
	if Execute_VES("call CAN_SDO_WRITE(1, 0x1601, 0, 8, 0)", 1007) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	' Set PDO entries in PDO 0x1601
	if Execute_VES("call CAN_SDO_WRITE(1, 0x1601, 1, 32, 0x60FE0120)", 1008) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	SET_DOUT_RANGE_PDO_DADD(1, 0,0,0,0,0,0)

	SET_DOUT_RANGE_PDO_DADD(1, 512+0x100 ,0  ,4,10000, 11 ,16)

	' Set number of PDO entries in PDO 0x1601
	if Execute_VES("call CAN_SDO_WRITE(1, 0x1601, 0, 8, 1)", 1007) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	' Set number of PDOs in the sync manager
	if Execute_VES("call CAN_SDO_WRITE(1, 0x1401, 1, 32, 1+512+ 0x100)",1003) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	' Zero number of entries in sync manager 2
	if Execute_VES("call CAN_SDO_WRITE(1, 0x1402, 1, 32, 0x80000000 +1+768+ 0x100)",1003) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	' Set PDOs in sync manager 2
	' Zero number of PDO entries in PDO 0x1602
	if Execute_VES("call CAN_SDO_WRITE(1, 0x1602, 0, 8, 0)", 1009) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	' Set PDO entries in PDO 0x1602
	' Set number of PDO entries in PDO 0x1602
	' Zero number of entries in sync manager 2
	if Execute_VES("call CAN_SDO_WRITE(1, 0x1403, 1, 32, 0x80000000 +1+1024+ 0x100)",1003) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	' Set PDOs in sync manager 2
	' Zero number of PDO entries in PDO 0x1603
	if Execute_VES("call CAN_SDO_WRITE(1, 0x1603, 0, 8, 0)", 1010) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	' Set PDO entries in PDO 0x1603
	' Set number of PDO entries in PDO 0x1603
	' Zero number of entries in sync manager 3
	if Execute_VES("call CAN_SDO_WRITE(1, 0x1800, 1, 32, 0x80000000 +1+128+ 0x100)",1011) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	' Set PDOs in sync manager 3
	' Zero number of PDO entries in PDO 0x1A00
	if Execute_VES("call CAN_SDO_WRITE(1, 0x1A00, 0, 8, 0)", 1012) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	' Set PDO entries in PDO 0x1A00
	if Execute_VES("call CAN_SDO_WRITE(1, 0x1A00, 1, 32, 0x60410010)", 1013) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	SET_STATUS_PDO_DADD(1,0,0, 0)

	SET_STATUS_PDO_DADD(1, 128 + 0x100   ,0 , 2)

	if Execute_VES("call CAN_SDO_WRITE(1, 0x1A00, 2, 32, 0x60640020)", 1014) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	SET_PFB_PDO_DADD(1, 0, 0, 0)

	SET_PFB_PDO_DADD(1, 128 + 0x100   , 2  , 4)

	' Set number of PDO entries in PDO 0x1A00
	if Execute_VES("call CAN_SDO_WRITE(1, 0x1A00, 0, 8, 2)", 1012) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	' Set number of PDOs in the sync manager
	if Execute_VES("call CAN_SDO_WRITE(1, 0x1800, 1, 32, 1+128+ 0x100)",1011) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	call CAN_SDO_WRITE(1, 0x1800, 2, 8,1 )
	' Zero number of entries in sync manager 3
	if Execute_VES("call CAN_SDO_WRITE(1, 0x1801, 1, 32, 0x80000000 +1+384+ 0x100)",1011) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	' Set PDOs in sync manager 3
	' Zero number of PDO entries in PDO 0x1A01
	if Execute_VES("call CAN_SDO_WRITE(1, 0x1A01, 0, 8, 0)", 1015) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	' Set PDO entries in PDO 0x1A01
	if Execute_VES("call CAN_SDO_WRITE(1, 0x1A01, 1, 32, 0x60FD0020)", 1016) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	SET_DIN_RANGE_PDO_DADD(1,0,0,0,0,0,0)

	SET_DIN_RANGE_PDO_DADD(1, 384+0x100 ,0,4, 10000, 31,16)

	' Set number of PDO entries in PDO 0x1A01
	if Execute_VES("call CAN_SDO_WRITE(1, 0x1A01, 0, 8, 1)", 1015) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	' Set number of PDOs in the sync manager
	if Execute_VES("call CAN_SDO_WRITE(1, 0x1801, 1, 32, 1+384+ 0x100)",1011) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	call CAN_SDO_WRITE(1, 0x1801, 2, 8,1 )
	' Zero number of entries in sync manager 3
	if Execute_VES("call CAN_SDO_WRITE(1, 0x1802, 1, 32, 0x80000000 +1+640+ 0x100)",1011) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	' Set PDOs in sync manager 3
	' Zero number of PDO entries in PDO 0x1A02
	if Execute_VES("call CAN_SDO_WRITE(1, 0x1A02, 0, 8, 0)", 1017) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	' Set PDO entries in PDO 0x1A02
	' Set number of PDO entries in PDO 0x1A02
	' Zero number of entries in sync manager 3
	if Execute_VES("call CAN_SDO_WRITE(1, 0x1803, 1, 32, 0x80000000 +1+896+ 0x100)",1011) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	' Set PDOs in sync manager 3
	' Zero number of PDO entries in PDO 0x1A03
	if Execute_VES("call CAN_SDO_WRITE(1, 0x1A03, 0, 8, 0)", 1018) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

	' Set PDO entries in PDO 0x1A03
	' Set number of PDO entries in PDO 0x1A03
	if Execute_VES("call CAN_SDO_WRITE(1 ,0x6060,0,8,8)", 1002) <> 0 then
		PDO_Mapping_Device_1 = -1
		goto ERR_PDO_DEVICE_1
	end if

ERR_PDO_DEVICE_1:

End Function


' Configure device 1 via SDO writes
Function SDO_Config_Device_1 as long

	SDO_Config_Device_1 = 0

	print "PREOP configuration via SDO of device 1"
	print "Set MICRO INTERPOLATION in device 1"
	if Execute_VES("call CAN_SDO_WRITE(1, 0x60C0, 0, 16, 2)", 1019) <> 0 then
		SDO_Config_Device_1 = -1
		goto ERR_SDO_DEVICE_1
	end if

	print "Set Feed constant MotorRevs in device 1"
	if Execute_VES("call CAN_SDO_WRITE(1, 0x6092, 1, 32, 1000000)", 1020) <> 0 then
		SDO_Config_Device_1 = -1
		goto ERR_SDO_DEVICE_1
	end if

	print "Set Feed constant ShaftRevs in device 1"
	if Execute_VES("call CAN_SDO_WRITE(1, 0x6092, 2, 32, 1)", 1021) <> 0 then
		SDO_Config_Device_1 = -1
		goto ERR_SDO_DEVICE_1
	end if

	print "Set GearRatio MotorRevs in device 1"
	if Execute_VES("call CAN_SDO_WRITE(1, 0x6091, 1, 32, 1)", 1022) <> 0 then
		SDO_Config_Device_1 = -1
		goto ERR_SDO_DEVICE_1
	end if

	print "Set GearRatio ShaftRevs in device 1"
	if Execute_VES("call CAN_SDO_WRITE(1, 0x6091, 2, 32, 1)", 1023) <> 0 then
		SDO_Config_Device_1 = -1
		goto ERR_SDO_DEVICE_1
	end if

	print "Set Smoothing in device 1"
	if Execute_VES("call CAN_SDO_WRITE(1, 0x2109, 0, 16, 0)", 1024) <> 0 then
		SDO_Config_Device_1 = -1
		goto ERR_SDO_DEVICE_1
	end if

	print "Set Homing_Method in device 1"
	if Execute_VES("call CAN_SDO_WRITE(1, 0x6098, 0, 8, 35)", 1025) <> 0 then
		SDO_Config_Device_1 = -1
		goto ERR_SDO_DEVICE_1
	end if

	print "Set Digital Output Mask in device 1"
	if Execute_VES("call CAN_SDO_WRITE(1, 0x60FE, 2, 32, 0x3f0000)", 1026) <> 0 then
		SDO_Config_Device_1 = -1
		goto ERR_SDO_DEVICE_1
	end if

	print "Set Interpolation Time Index in device 1"
	if Execute_VES("call CAN_SDO_WRITE(1, 0x60C2, 2, 8, -3)", 1027) <> 0 then
		SDO_Config_Device_1 = -1
		goto ERR_SDO_DEVICE_1
	end if

ERR_SDO_DEVICE_1:

End Function


' Configure device 1 via SDO writes
Function OpSDO_Config_Device_1 as long

	OpSDO_Config_Device_1 = 0

	print "OP configuration via SDO of device 1"
OpERR_SDO_DEVICE_1:

End Function


' Associate PDO entries of device 1 with axis properties
Function Set_PDOe_To_AxProps_Device_1 as long

	Set_PDOe_To_AxProps_Device_1 = 0

	print "Associating between PDO entries of device 1 and axis properties"
ERR_PDOE_AXPROP_DEVICE_1:

End Function


' Invoke configuration functions for device 2
Function INSTALL_DEVICE_2 as long

	dim PNUM as long

	INSTALL_DEVICE_2 = 0

	if Set_PDOe_To_AxProps_Device_2 = -1 then
		INSTALL_DEVICE_2 = -1
		goto INSTALL_DEVICE_2_DONE
	end if

	if SDO_Config_Device_2 = -1 then
		INSTALL_DEVICE_2 = -1
		goto INSTALL_DEVICE_2_DONE
	end if


INSTALL_DEVICE_2_DONE:

End Function


 'Create PDO entries mapping of device 2
Function PDO_Mapping_Device_2 as long

	PDO_Mapping_Device_2 = 0

	' Zero number of entries in sync manager 2
	if Execute_VES("call CAN_SDO_WRITE(2, 0x1400, 1, 32, 0x80000000 +2+256+ 0x100)",1030) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	' Set PDOs in sync manager 2
	' Zero number of PDO entries in PDO 0x1600
	if Execute_VES("call CAN_SDO_WRITE(2, 0x1600, 0, 8, 0)", 1031) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	' Set PDO entries in PDO 0x1600
	if Execute_VES("call CAN_SDO_WRITE(2, 0x1600, 1, 32, 0x60400010)", 1032) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	SET_CONTROL_PDO_DADD(2, 0 ,0 , 0)

	SET_CONTROL_PDO_DADD(2, 256+0x100 ,0 , 2)

	if Execute_VES("call CAN_SDO_WRITE(2, 0x1600, 2, 32, 0x607A0020)", 1033) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	SET_PCMD_PDO_DADD(2,0,0,0)

	SET_PCMD_PDO_DADD(2, 256+0x100 , 2  , 4)

	' Set number of PDO entries in PDO 0x1600
	if Execute_VES("call CAN_SDO_WRITE(2, 0x1600, 0, 8, 2)", 1031) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	' Set number of PDOs in the sync manager
	if Execute_VES("call CAN_SDO_WRITE(2, 0x1400, 1, 32, 2+256+ 0x100)",1030) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	' Zero number of entries in sync manager 2
	if Execute_VES("call CAN_SDO_WRITE(2, 0x1401, 1, 32, 0x80000000 +2+512+ 0x100)",1030) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	' Set PDOs in sync manager 2
	' Zero number of PDO entries in PDO 0x1601
	if Execute_VES("call CAN_SDO_WRITE(2, 0x1601, 0, 8, 0)", 1034) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	' Set PDO entries in PDO 0x1601
	if Execute_VES("call CAN_SDO_WRITE(2, 0x1601, 1, 32, 0x60FE0120)", 1035) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	SET_DOUT_RANGE_PDO_DADD(2, 0,0,0,0,0,0)

	SET_DOUT_RANGE_PDO_DADD(2, 512+0x100 ,0  ,4,20000, 11 ,16)

	' Set number of PDO entries in PDO 0x1601
	if Execute_VES("call CAN_SDO_WRITE(2, 0x1601, 0, 8, 1)", 1034) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	' Set number of PDOs in the sync manager
	if Execute_VES("call CAN_SDO_WRITE(2, 0x1401, 1, 32, 2+512+ 0x100)",1030) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	' Zero number of entries in sync manager 2
	if Execute_VES("call CAN_SDO_WRITE(2, 0x1402, 1, 32, 0x80000000 +2+768+ 0x100)",1030) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	' Set PDOs in sync manager 2
	' Zero number of PDO entries in PDO 0x1602
	if Execute_VES("call CAN_SDO_WRITE(2, 0x1602, 0, 8, 0)", 1036) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	' Set PDO entries in PDO 0x1602
	' Set number of PDO entries in PDO 0x1602
	' Zero number of entries in sync manager 2
	if Execute_VES("call CAN_SDO_WRITE(2, 0x1403, 1, 32, 0x80000000 +2+1024+ 0x100)",1030) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	' Set PDOs in sync manager 2
	' Zero number of PDO entries in PDO 0x1603
	if Execute_VES("call CAN_SDO_WRITE(2, 0x1603, 0, 8, 0)", 1037) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	' Set PDO entries in PDO 0x1603
	' Set number of PDO entries in PDO 0x1603
	' Zero number of entries in sync manager 3
	if Execute_VES("call CAN_SDO_WRITE(2, 0x1800, 1, 32, 0x80000000 +2+128+ 0x100)",1038) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	' Set PDOs in sync manager 3
	' Zero number of PDO entries in PDO 0x1A00
	if Execute_VES("call CAN_SDO_WRITE(2, 0x1A00, 0, 8, 0)", 1039) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	' Set PDO entries in PDO 0x1A00
	if Execute_VES("call CAN_SDO_WRITE(2, 0x1A00, 1, 32, 0x60410010)", 1040) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	SET_STATUS_PDO_DADD(2,0,0, 0)

	SET_STATUS_PDO_DADD(2, 128 + 0x100   ,0 , 2)

	if Execute_VES("call CAN_SDO_WRITE(2, 0x1A00, 2, 32, 0x60640020)", 1041) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	SET_PFB_PDO_DADD(2, 0, 0, 0)

	SET_PFB_PDO_DADD(2, 128 + 0x100   , 2  , 4)

	' Set number of PDO entries in PDO 0x1A00
	if Execute_VES("call CAN_SDO_WRITE(2, 0x1A00, 0, 8, 2)", 1039) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	' Set number of PDOs in the sync manager
	if Execute_VES("call CAN_SDO_WRITE(2, 0x1800, 1, 32, 2+128+ 0x100)",1038) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	call CAN_SDO_WRITE(2, 0x1800, 2, 8,1 )
	' Zero number of entries in sync manager 3
	if Execute_VES("call CAN_SDO_WRITE(2, 0x1801, 1, 32, 0x80000000 +2+384+ 0x100)",1038) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	' Set PDOs in sync manager 3
	' Zero number of PDO entries in PDO 0x1A01
	if Execute_VES("call CAN_SDO_WRITE(2, 0x1A01, 0, 8, 0)", 1042) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	' Set PDO entries in PDO 0x1A01
	if Execute_VES("call CAN_SDO_WRITE(2, 0x1A01, 1, 32, 0x60FD0020)", 1043) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	SET_DIN_RANGE_PDO_DADD(2,0,0,0,0,0,0)

	SET_DIN_RANGE_PDO_DADD(2, 384+0x100 ,0,4, 20000, 31,16)

	' Set number of PDO entries in PDO 0x1A01
	if Execute_VES("call CAN_SDO_WRITE(2, 0x1A01, 0, 8, 1)", 1042) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	' Set number of PDOs in the sync manager
	if Execute_VES("call CAN_SDO_WRITE(2, 0x1801, 1, 32, 2+384+ 0x100)",1038) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	call CAN_SDO_WRITE(2, 0x1801, 2, 8,1 )
	' Zero number of entries in sync manager 3
	if Execute_VES("call CAN_SDO_WRITE(2, 0x1802, 1, 32, 0x80000000 +2+640+ 0x100)",1038) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	' Set PDOs in sync manager 3
	' Zero number of PDO entries in PDO 0x1A02
	if Execute_VES("call CAN_SDO_WRITE(2, 0x1A02, 0, 8, 0)", 1044) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	' Set PDO entries in PDO 0x1A02
	' Set number of PDO entries in PDO 0x1A02
	' Zero number of entries in sync manager 3
	if Execute_VES("call CAN_SDO_WRITE(2, 0x1803, 1, 32, 0x80000000 +2+896+ 0x100)",1038) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	' Set PDOs in sync manager 3
	' Zero number of PDO entries in PDO 0x1A03
	if Execute_VES("call CAN_SDO_WRITE(2, 0x1A03, 0, 8, 0)", 1045) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

	' Set PDO entries in PDO 0x1A03
	' Set number of PDO entries in PDO 0x1A03
	if Execute_VES("call CAN_SDO_WRITE(2 ,0x6060,0,8,8)", 1029) <> 0 then
		PDO_Mapping_Device_2 = -1
		goto ERR_PDO_DEVICE_2
	end if

ERR_PDO_DEVICE_2:

End Function


' Configure device 2 via SDO writes
Function SDO_Config_Device_2 as long

	SDO_Config_Device_2 = 0

	print "PREOP configuration via SDO of device 2"
	print "Set MICRO INTERPOLATION in device 2"
	if Execute_VES("call CAN_SDO_WRITE(2, 0x60C0, 0, 16, 2)", 1046) <> 0 then
		SDO_Config_Device_2 = -1
		goto ERR_SDO_DEVICE_2
	end if

	print "Set Feed constant MotorRevs in device 2"
	if Execute_VES("call CAN_SDO_WRITE(2, 0x6092, 1, 32, 1000000)", 1047) <> 0 then
		SDO_Config_Device_2 = -1
		goto ERR_SDO_DEVICE_2
	end if

	print "Set Feed constant ShaftRevs in device 2"
	if Execute_VES("call CAN_SDO_WRITE(2, 0x6092, 2, 32, 1)", 1048) <> 0 then
		SDO_Config_Device_2 = -1
		goto ERR_SDO_DEVICE_2
	end if

	print "Set GearRatio MotorRevs in device 2"
	if Execute_VES("call CAN_SDO_WRITE(2, 0x6091, 1, 32, 1)", 1049) <> 0 then
		SDO_Config_Device_2 = -1
		goto ERR_SDO_DEVICE_2
	end if

	print "Set GearRatio ShaftRevs in device 2"
	if Execute_VES("call CAN_SDO_WRITE(2, 0x6091, 2, 32, 1)", 1050) <> 0 then
		SDO_Config_Device_2 = -1
		goto ERR_SDO_DEVICE_2
	end if

	print "Set Smoothing in device 2"
	if Execute_VES("call CAN_SDO_WRITE(2, 0x2109, 0, 16, 0)", 1051) <> 0 then
		SDO_Config_Device_2 = -1
		goto ERR_SDO_DEVICE_2
	end if

	print "Set Homing_Method in device 2"
	if Execute_VES("call CAN_SDO_WRITE(2, 0x6098, 0, 8, 35)", 1052) <> 0 then
		SDO_Config_Device_2 = -1
		goto ERR_SDO_DEVICE_2
	end if

	print "Set Digital Output Mask in device 2"
	if Execute_VES("call CAN_SDO_WRITE(2, 0x60FE, 2, 32, 0x3f0000)", 1053) <> 0 then
		SDO_Config_Device_2 = -1
		goto ERR_SDO_DEVICE_2
	end if

	print "Set Interpolation Time Index in device 2"
	if Execute_VES("call CAN_SDO_WRITE(2, 0x60C2, 2, 8, -3)", 1054) <> 0 then
		SDO_Config_Device_2 = -1
		goto ERR_SDO_DEVICE_2
	end if

ERR_SDO_DEVICE_2:

End Function


' Configure device 2 via SDO writes
Function OpSDO_Config_Device_2 as long

	OpSDO_Config_Device_2 = 0

	print "OP configuration via SDO of device 2"
OpERR_SDO_DEVICE_2:

End Function


' Associate PDO entries of device 2 with axis properties
Function Set_PDOe_To_AxProps_Device_2 as long

	Set_PDOe_To_AxProps_Device_2 = 0

	print "Associating between PDO entries of device 2 and axis properties"
ERR_PDOE_AXPROP_DEVICE_2:

End Function


' Invoke configuration functions for device 3
Function INSTALL_DEVICE_3 as long

	dim PNUM as long

	INSTALL_DEVICE_3 = 0

	if Set_PDOe_To_AxProps_Device_3 = -1 then
		INSTALL_DEVICE_3 = -1
		goto INSTALL_DEVICE_3_DONE
	end if

	if SDO_Config_Device_3 = -1 then
		INSTALL_DEVICE_3 = -1
		goto INSTALL_DEVICE_3_DONE
	end if


INSTALL_DEVICE_3_DONE:

End Function


 'Create PDO entries mapping of device 3
Function PDO_Mapping_Device_3 as long

	PDO_Mapping_Device_3 = 0

	' Zero number of entries in sync manager 2
	if Execute_VES("call CAN_SDO_WRITE(3, 0x1400, 1, 32, 0x80000000 +3+256+ 0x100)",1057) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	' Set PDOs in sync manager 2
	' Zero number of PDO entries in PDO 0x1600
	if Execute_VES("call CAN_SDO_WRITE(3, 0x1600, 0, 8, 0)", 1058) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	' Set PDO entries in PDO 0x1600
	if Execute_VES("call CAN_SDO_WRITE(3, 0x1600, 1, 32, 0x60400010)", 1059) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	SET_CONTROL_PDO_DADD(3, 0 ,0 , 0)

	SET_CONTROL_PDO_DADD(3, 256+0x100 ,0 , 2)

	if Execute_VES("call CAN_SDO_WRITE(3, 0x1600, 2, 32, 0x607A0020)", 1060) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	SET_PCMD_PDO_DADD(3,0,0,0)

	SET_PCMD_PDO_DADD(3, 256+0x100 , 2  , 4)

	' Set number of PDO entries in PDO 0x1600
	if Execute_VES("call CAN_SDO_WRITE(3, 0x1600, 0, 8, 2)", 1058) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	' Set number of PDOs in the sync manager
	if Execute_VES("call CAN_SDO_WRITE(3, 0x1400, 1, 32, 3+256+ 0x100)",1057) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	' Zero number of entries in sync manager 2
	if Execute_VES("call CAN_SDO_WRITE(3, 0x1401, 1, 32, 0x80000000 +3+512+ 0x100)",1057) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	' Set PDOs in sync manager 2
	' Zero number of PDO entries in PDO 0x1601
	if Execute_VES("call CAN_SDO_WRITE(3, 0x1601, 0, 8, 0)", 1061) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	' Set PDO entries in PDO 0x1601
	if Execute_VES("call CAN_SDO_WRITE(3, 0x1601, 1, 32, 0x60FE0120)", 1062) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	SET_DOUT_RANGE_PDO_DADD(3, 0,0,0,0,0,0)

	SET_DOUT_RANGE_PDO_DADD(3, 512+0x100 ,0  ,4,30000, 11 ,16)

	' Set number of PDO entries in PDO 0x1601
	if Execute_VES("call CAN_SDO_WRITE(3, 0x1601, 0, 8, 1)", 1061) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	' Set number of PDOs in the sync manager
	if Execute_VES("call CAN_SDO_WRITE(3, 0x1401, 1, 32, 3+512+ 0x100)",1057) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	' Zero number of entries in sync manager 2
	if Execute_VES("call CAN_SDO_WRITE(3, 0x1402, 1, 32, 0x80000000 +3+768+ 0x100)",1057) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	' Set PDOs in sync manager 2
	' Zero number of PDO entries in PDO 0x1602
	if Execute_VES("call CAN_SDO_WRITE(3, 0x1602, 0, 8, 0)", 1063) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	' Set PDO entries in PDO 0x1602
	' Set number of PDO entries in PDO 0x1602
	' Zero number of entries in sync manager 2
	if Execute_VES("call CAN_SDO_WRITE(3, 0x1403, 1, 32, 0x80000000 +3+1024+ 0x100)",1057) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	' Set PDOs in sync manager 2
	' Zero number of PDO entries in PDO 0x1603
	if Execute_VES("call CAN_SDO_WRITE(3, 0x1603, 0, 8, 0)", 1064) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	' Set PDO entries in PDO 0x1603
	' Set number of PDO entries in PDO 0x1603
	' Zero number of entries in sync manager 3
	if Execute_VES("call CAN_SDO_WRITE(3, 0x1800, 1, 32, 0x80000000 +3+128+ 0x100)",1065) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	' Set PDOs in sync manager 3
	' Zero number of PDO entries in PDO 0x1A00
	if Execute_VES("call CAN_SDO_WRITE(3, 0x1A00, 0, 8, 0)", 1066) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	' Set PDO entries in PDO 0x1A00
	if Execute_VES("call CAN_SDO_WRITE(3, 0x1A00, 1, 32, 0x60410010)", 1067) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	SET_STATUS_PDO_DADD(3,0,0, 0)

	SET_STATUS_PDO_DADD(3, 128 + 0x100   ,0 , 2)

	if Execute_VES("call CAN_SDO_WRITE(3, 0x1A00, 2, 32, 0x60640020)", 1068) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	SET_PFB_PDO_DADD(3, 0, 0, 0)

	SET_PFB_PDO_DADD(3, 128 + 0x100   , 2  , 4)

	' Set number of PDO entries in PDO 0x1A00
	if Execute_VES("call CAN_SDO_WRITE(3, 0x1A00, 0, 8, 2)", 1066) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	' Set number of PDOs in the sync manager
	if Execute_VES("call CAN_SDO_WRITE(3, 0x1800, 1, 32, 3+128+ 0x100)",1065) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	call CAN_SDO_WRITE(3, 0x1800, 2, 8,1 )
	' Zero number of entries in sync manager 3
	if Execute_VES("call CAN_SDO_WRITE(3, 0x1801, 1, 32, 0x80000000 +3+384+ 0x100)",1065) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	' Set PDOs in sync manager 3
	' Zero number of PDO entries in PDO 0x1A01
	if Execute_VES("call CAN_SDO_WRITE(3, 0x1A01, 0, 8, 0)", 1069) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	' Set PDO entries in PDO 0x1A01
	if Execute_VES("call CAN_SDO_WRITE(3, 0x1A01, 1, 32, 0x60FD0020)", 1070) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	SET_DIN_RANGE_PDO_DADD(3,0,0,0,0,0,0)

	SET_DIN_RANGE_PDO_DADD(3, 384+0x100 ,0,4, 30000, 31,16)

	' Set number of PDO entries in PDO 0x1A01
	if Execute_VES("call CAN_SDO_WRITE(3, 0x1A01, 0, 8, 1)", 1069) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	' Set number of PDOs in the sync manager
	if Execute_VES("call CAN_SDO_WRITE(3, 0x1801, 1, 32, 3+384+ 0x100)",1065) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	call CAN_SDO_WRITE(3, 0x1801, 2, 8,1 )
	' Zero number of entries in sync manager 3
	if Execute_VES("call CAN_SDO_WRITE(3, 0x1802, 1, 32, 0x80000000 +3+640+ 0x100)",1065) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	' Set PDOs in sync manager 3
	' Zero number of PDO entries in PDO 0x1A02
	if Execute_VES("call CAN_SDO_WRITE(3, 0x1A02, 0, 8, 0)", 1071) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	' Set PDO entries in PDO 0x1A02
	' Set number of PDO entries in PDO 0x1A02
	' Zero number of entries in sync manager 3
	if Execute_VES("call CAN_SDO_WRITE(3, 0x1803, 1, 32, 0x80000000 +3+896+ 0x100)",1065) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	' Set PDOs in sync manager 3
	' Zero number of PDO entries in PDO 0x1A03
	if Execute_VES("call CAN_SDO_WRITE(3, 0x1A03, 0, 8, 0)", 1072) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

	' Set PDO entries in PDO 0x1A03
	' Set number of PDO entries in PDO 0x1A03
	if Execute_VES("call CAN_SDO_WRITE(3 ,0x6060,0,8,8)", 1056) <> 0 then
		PDO_Mapping_Device_3 = -1
		goto ERR_PDO_DEVICE_3
	end if

ERR_PDO_DEVICE_3:

End Function


' Configure device 3 via SDO writes
Function SDO_Config_Device_3 as long

	SDO_Config_Device_3 = 0

	print "PREOP configuration via SDO of device 3"
	print "Set MICRO INTERPOLATION in device 3"
	if Execute_VES("call CAN_SDO_WRITE(3, 0x60C0, 0, 16, 2)", 1073) <> 0 then
		SDO_Config_Device_3 = -1
		goto ERR_SDO_DEVICE_3
	end if

	print "Set Feed constant MotorRevs in device 3"
	if Execute_VES("call CAN_SDO_WRITE(3, 0x6092, 1, 32, 1000000)", 1074) <> 0 then
		SDO_Config_Device_3 = -1
		goto ERR_SDO_DEVICE_3
	end if

	print "Set Feed constant ShaftRevs in device 3"
	if Execute_VES("call CAN_SDO_WRITE(3, 0x6092, 2, 32, 1)", 1075) <> 0 then
		SDO_Config_Device_3 = -1
		goto ERR_SDO_DEVICE_3
	end if

	print "Set GearRatio MotorRevs in device 3"
	if Execute_VES("call CAN_SDO_WRITE(3, 0x6091, 1, 32, 1)", 1076) <> 0 then
		SDO_Config_Device_3 = -1
		goto ERR_SDO_DEVICE_3
	end if

	print "Set GearRatio ShaftRevs in device 3"
	if Execute_VES("call CAN_SDO_WRITE(3, 0x6091, 2, 32, 1)", 1077) <> 0 then
		SDO_Config_Device_3 = -1
		goto ERR_SDO_DEVICE_3
	end if

	print "Set Smoothing in device 3"
	if Execute_VES("call CAN_SDO_WRITE(3, 0x2109, 0, 16, 0)", 1078) <> 0 then
		SDO_Config_Device_3 = -1
		goto ERR_SDO_DEVICE_3
	end if

	print "Set Homing_Method in device 3"
	if Execute_VES("call CAN_SDO_WRITE(3, 0x6098, 0, 8, 35)", 1079) <> 0 then
		SDO_Config_Device_3 = -1
		goto ERR_SDO_DEVICE_3
	end if

	print "Set Digital Output Mask in device 3"
	if Execute_VES("call CAN_SDO_WRITE(3, 0x60FE, 2, 32, 0x3f0000)", 1080) <> 0 then
		SDO_Config_Device_3 = -1
		goto ERR_SDO_DEVICE_3
	end if

	print "Set Interpolation Time Index in device 3"
	if Execute_VES("call CAN_SDO_WRITE(3, 0x60C2, 2, 8, -3)", 1081) <> 0 then
		SDO_Config_Device_3 = -1
		goto ERR_SDO_DEVICE_3
	end if

ERR_SDO_DEVICE_3:

End Function


' Configure device 3 via SDO writes
Function OpSDO_Config_Device_3 as long

	OpSDO_Config_Device_3 = 0

	print "OP configuration via SDO of device 3"
OpERR_SDO_DEVICE_3:

End Function


' Associate PDO entries of device 3 with axis properties
Function Set_PDOe_To_AxProps_Device_3 as long

	Set_PDOe_To_AxProps_Device_3 = 0

	print "Associating between PDO entries of device 3 and axis properties"
ERR_PDOE_AXPROP_DEVICE_3:

End Function


' Invoke configuration functions for device 4
Function INSTALL_DEVICE_4 as long

	dim PNUM as long

	INSTALL_DEVICE_4 = 0

	if Set_PDOe_To_AxProps_Device_4 = -1 then
		INSTALL_DEVICE_4 = -1
		goto INSTALL_DEVICE_4_DONE
	end if

	if SDO_Config_Device_4 = -1 then
		INSTALL_DEVICE_4 = -1
		goto INSTALL_DEVICE_4_DONE
	end if


INSTALL_DEVICE_4_DONE:

End Function


 'Create PDO entries mapping of device 4
Function PDO_Mapping_Device_4 as long

	PDO_Mapping_Device_4 = 0

	' Zero number of entries in sync manager 2
	if Execute_VES("call CAN_SDO_WRITE(4, 0x1400, 1, 32, 0x80000000 +4+256+ 0x100)",1084) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	' Set PDOs in sync manager 2
	' Zero number of PDO entries in PDO 0x1600
	if Execute_VES("call CAN_SDO_WRITE(4, 0x1600, 0, 8, 0)", 1085) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	' Set PDO entries in PDO 0x1600
	if Execute_VES("call CAN_SDO_WRITE(4, 0x1600, 1, 32, 0x60400010)", 1086) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	SET_CONTROL_PDO_DADD(4, 0 ,0 , 0)

	SET_CONTROL_PDO_DADD(4, 256+0x100 ,0 , 2)

	if Execute_VES("call CAN_SDO_WRITE(4, 0x1600, 2, 32, 0x607A0020)", 1087) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	SET_PCMD_PDO_DADD(4,0,0,0)

	SET_PCMD_PDO_DADD(4, 256+0x100 , 2  , 4)

	' Set number of PDO entries in PDO 0x1600
	if Execute_VES("call CAN_SDO_WRITE(4, 0x1600, 0, 8, 2)", 1085) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	' Set number of PDOs in the sync manager
	if Execute_VES("call CAN_SDO_WRITE(4, 0x1400, 1, 32, 4+256+ 0x100)",1084) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	' Zero number of entries in sync manager 2
	if Execute_VES("call CAN_SDO_WRITE(4, 0x1401, 1, 32, 0x80000000 +4+512+ 0x100)",1084) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	' Set PDOs in sync manager 2
	' Zero number of PDO entries in PDO 0x1601
	if Execute_VES("call CAN_SDO_WRITE(4, 0x1601, 0, 8, 0)", 1088) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	' Set PDO entries in PDO 0x1601
	if Execute_VES("call CAN_SDO_WRITE(4, 0x1601, 1, 32, 0x60FE0120)", 1089) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	SET_DOUT_RANGE_PDO_DADD(4, 0,0,0,0,0,0)

	SET_DOUT_RANGE_PDO_DADD(4, 512+0x100 ,0  ,4,40000, 11 ,16)

	' Set number of PDO entries in PDO 0x1601
	if Execute_VES("call CAN_SDO_WRITE(4, 0x1601, 0, 8, 1)", 1088) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	' Set number of PDOs in the sync manager
	if Execute_VES("call CAN_SDO_WRITE(4, 0x1401, 1, 32, 4+512+ 0x100)",1084) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	' Zero number of entries in sync manager 2
	if Execute_VES("call CAN_SDO_WRITE(4, 0x1402, 1, 32, 0x80000000 +4+768+ 0x100)",1084) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	' Set PDOs in sync manager 2
	' Zero number of PDO entries in PDO 0x1602
	if Execute_VES("call CAN_SDO_WRITE(4, 0x1602, 0, 8, 0)", 1090) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	' Set PDO entries in PDO 0x1602
	' Set number of PDO entries in PDO 0x1602
	' Zero number of entries in sync manager 2
	if Execute_VES("call CAN_SDO_WRITE(4, 0x1403, 1, 32, 0x80000000 +4+1024+ 0x100)",1084) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	' Set PDOs in sync manager 2
	' Zero number of PDO entries in PDO 0x1603
	if Execute_VES("call CAN_SDO_WRITE(4, 0x1603, 0, 8, 0)", 1091) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	' Set PDO entries in PDO 0x1603
	' Set number of PDO entries in PDO 0x1603
	' Zero number of entries in sync manager 3
	if Execute_VES("call CAN_SDO_WRITE(4, 0x1800, 1, 32, 0x80000000 +4+128+ 0x100)",1092) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	' Set PDOs in sync manager 3
	' Zero number of PDO entries in PDO 0x1A00
	if Execute_VES("call CAN_SDO_WRITE(4, 0x1A00, 0, 8, 0)", 1093) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	' Set PDO entries in PDO 0x1A00
	if Execute_VES("call CAN_SDO_WRITE(4, 0x1A00, 1, 32, 0x60410010)", 1094) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	SET_STATUS_PDO_DADD(4,0,0, 0)

	SET_STATUS_PDO_DADD(4, 128 + 0x100   ,0 , 2)

	if Execute_VES("call CAN_SDO_WRITE(4, 0x1A00, 2, 32, 0x60640020)", 1095) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	SET_PFB_PDO_DADD(4, 0, 0, 0)

	SET_PFB_PDO_DADD(4, 128 + 0x100   , 2  , 4)

	' Set number of PDO entries in PDO 0x1A00
	if Execute_VES("call CAN_SDO_WRITE(4, 0x1A00, 0, 8, 2)", 1093) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	' Set number of PDOs in the sync manager
	if Execute_VES("call CAN_SDO_WRITE(4, 0x1800, 1, 32, 4+128+ 0x100)",1092) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	call CAN_SDO_WRITE(4, 0x1800, 2, 8,1 )
	' Zero number of entries in sync manager 3
	if Execute_VES("call CAN_SDO_WRITE(4, 0x1801, 1, 32, 0x80000000 +4+384+ 0x100)",1092) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	' Set PDOs in sync manager 3
	' Zero number of PDO entries in PDO 0x1A01
	if Execute_VES("call CAN_SDO_WRITE(4, 0x1A01, 0, 8, 0)", 1096) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	' Set PDO entries in PDO 0x1A01
	if Execute_VES("call CAN_SDO_WRITE(4, 0x1A01, 1, 32, 0x60FD0020)", 1097) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	SET_DIN_RANGE_PDO_DADD(4,0,0,0,0,0,0)

	SET_DIN_RANGE_PDO_DADD(4, 384+0x100 ,0,4, 40000, 31,16)

	' Set number of PDO entries in PDO 0x1A01
	if Execute_VES("call CAN_SDO_WRITE(4, 0x1A01, 0, 8, 1)", 1096) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	' Set number of PDOs in the sync manager
	if Execute_VES("call CAN_SDO_WRITE(4, 0x1801, 1, 32, 4+384+ 0x100)",1092) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	call CAN_SDO_WRITE(4, 0x1801, 2, 8,1 )
	' Zero number of entries in sync manager 3
	if Execute_VES("call CAN_SDO_WRITE(4, 0x1802, 1, 32, 0x80000000 +4+640+ 0x100)",1092) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	' Set PDOs in sync manager 3
	' Zero number of PDO entries in PDO 0x1A02
	if Execute_VES("call CAN_SDO_WRITE(4, 0x1A02, 0, 8, 0)", 1098) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	' Set PDO entries in PDO 0x1A02
	' Set number of PDO entries in PDO 0x1A02
	' Zero number of entries in sync manager 3
	if Execute_VES("call CAN_SDO_WRITE(4, 0x1803, 1, 32, 0x80000000 +4+896+ 0x100)",1092) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	' Set PDOs in sync manager 3
	' Zero number of PDO entries in PDO 0x1A03
	if Execute_VES("call CAN_SDO_WRITE(4, 0x1A03, 0, 8, 0)", 1099) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

	' Set PDO entries in PDO 0x1A03
	' Set number of PDO entries in PDO 0x1A03
	if Execute_VES("call CAN_SDO_WRITE(4 ,0x6060,0,8,8)", 1083) <> 0 then
		PDO_Mapping_Device_4 = -1
		goto ERR_PDO_DEVICE_4
	end if

ERR_PDO_DEVICE_4:

End Function


' Configure device 4 via SDO writes
Function SDO_Config_Device_4 as long

	SDO_Config_Device_4 = 0

	print "PREOP configuration via SDO of device 4"
	print "Set MICRO INTERPOLATION in device 4"
	if Execute_VES("call CAN_SDO_WRITE(4, 0x60C0, 0, 16, 2)", 1100) <> 0 then
		SDO_Config_Device_4 = -1
		goto ERR_SDO_DEVICE_4
	end if

	print "Set Feed constant MotorRevs in device 4"
	if Execute_VES("call CAN_SDO_WRITE(4, 0x6092, 1, 32, 1000000)", 1101) <> 0 then
		SDO_Config_Device_4 = -1
		goto ERR_SDO_DEVICE_4
	end if

	print "Set Feed constant ShaftRevs in device 4"
	if Execute_VES("call CAN_SDO_WRITE(4, 0x6092, 2, 32, 1)", 1102) <> 0 then
		SDO_Config_Device_4 = -1
		goto ERR_SDO_DEVICE_4
	end if

	print "Set GearRatio MotorRevs in device 4"
	if Execute_VES("call CAN_SDO_WRITE(4, 0x6091, 1, 32, 1)", 1103) <> 0 then
		SDO_Config_Device_4 = -1
		goto ERR_SDO_DEVICE_4
	end if

	print "Set GearRatio ShaftRevs in device 4"
	if Execute_VES("call CAN_SDO_WRITE(4, 0x6091, 2, 32, 1)", 1104) <> 0 then
		SDO_Config_Device_4 = -1
		goto ERR_SDO_DEVICE_4
	end if

	print "Set Smoothing in device 4"
	if Execute_VES("call CAN_SDO_WRITE(4, 0x2109, 0, 16, 0)", 1105) <> 0 then
		SDO_Config_Device_4 = -1
		goto ERR_SDO_DEVICE_4
	end if

	print "Set Homing_Method in device 4"
	if Execute_VES("call CAN_SDO_WRITE(4, 0x6098, 0, 8, 35)", 1106) <> 0 then
		SDO_Config_Device_4 = -1
		goto ERR_SDO_DEVICE_4
	end if

	print "Set Digital Output Mask in device 4"
	if Execute_VES("call CAN_SDO_WRITE(4, 0x60FE, 2, 32, 0x3f0000)", 1107) <> 0 then
		SDO_Config_Device_4 = -1
		goto ERR_SDO_DEVICE_4
	end if

	print "Set Interpolation Time Index in device 4"
	if Execute_VES("call CAN_SDO_WRITE(4, 0x60C2, 2, 8, -3)", 1108) <> 0 then
		SDO_Config_Device_4 = -1
		goto ERR_SDO_DEVICE_4
	end if

ERR_SDO_DEVICE_4:

End Function


' Configure device 4 via SDO writes
Function OpSDO_Config_Device_4 as long

	OpSDO_Config_Device_4 = 0

	print "OP configuration via SDO of device 4"
OpERR_SDO_DEVICE_4:

End Function


' Associate PDO entries of device 4 with axis properties
Function Set_PDOe_To_AxProps_Device_4 as long

	Set_PDOe_To_AxProps_Device_4 = 0

	print "Associating between PDO entries of device 4 and axis properties"
ERR_PDOE_AXPROP_DEVICE_4:

End Function


' Invoke configuration functions for device 5
Function INSTALL_DEVICE_5 as long

	dim PNUM as long

	INSTALL_DEVICE_5 = 0

	if Set_PDOe_To_AxProps_Device_5 = -1 then
		INSTALL_DEVICE_5 = -1
		goto INSTALL_DEVICE_5_DONE
	end if

	if SDO_Config_Device_5 = -1 then
		INSTALL_DEVICE_5 = -1
		goto INSTALL_DEVICE_5_DONE
	end if


INSTALL_DEVICE_5_DONE:

End Function


 'Create PDO entries mapping of device 5
Function PDO_Mapping_Device_5 as long

	PDO_Mapping_Device_5 = 0

	' Zero number of entries in sync manager 2
	if Execute_VES("call CAN_SDO_WRITE(5, 0x1400, 1, 32, 0x80000000 +5+256+ 0x100)",1111) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	' Set PDOs in sync manager 2
	' Zero number of PDO entries in PDO 0x1600
	if Execute_VES("call CAN_SDO_WRITE(5, 0x1600, 0, 8, 0)", 1112) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	' Set PDO entries in PDO 0x1600
	if Execute_VES("call CAN_SDO_WRITE(5, 0x1600, 1, 32, 0x60400010)", 1113) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	SET_CONTROL_PDO_DADD(5, 0 ,0 , 0)

	SET_CONTROL_PDO_DADD(5, 256+0x100 ,0 , 2)

	if Execute_VES("call CAN_SDO_WRITE(5, 0x1600, 2, 32, 0x607A0020)", 1114) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	SET_PCMD_PDO_DADD(5,0,0,0)

	SET_PCMD_PDO_DADD(5, 256+0x100 , 2  , 4)

	' Set number of PDO entries in PDO 0x1600
	if Execute_VES("call CAN_SDO_WRITE(5, 0x1600, 0, 8, 2)", 1112) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	' Set number of PDOs in the sync manager
	if Execute_VES("call CAN_SDO_WRITE(5, 0x1400, 1, 32, 5+256+ 0x100)",1111) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	' Zero number of entries in sync manager 2
	if Execute_VES("call CAN_SDO_WRITE(5, 0x1401, 1, 32, 0x80000000 +5+512+ 0x100)",1111) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	' Set PDOs in sync manager 2
	' Zero number of PDO entries in PDO 0x1601
	if Execute_VES("call CAN_SDO_WRITE(5, 0x1601, 0, 8, 0)", 1115) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	' Set PDO entries in PDO 0x1601
	if Execute_VES("call CAN_SDO_WRITE(5, 0x1601, 1, 32, 0x60FE0120)", 1116) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	SET_DOUT_RANGE_PDO_DADD(5, 0,0,0,0,0,0)

	SET_DOUT_RANGE_PDO_DADD(5, 512+0x100 ,0  ,4,50000, 11 ,16)

	' Set number of PDO entries in PDO 0x1601
	if Execute_VES("call CAN_SDO_WRITE(5, 0x1601, 0, 8, 1)", 1115) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	' Set number of PDOs in the sync manager
	if Execute_VES("call CAN_SDO_WRITE(5, 0x1401, 1, 32, 5+512+ 0x100)",1111) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	' Zero number of entries in sync manager 2
	if Execute_VES("call CAN_SDO_WRITE(5, 0x1402, 1, 32, 0x80000000 +5+768+ 0x100)",1111) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	' Set PDOs in sync manager 2
	' Zero number of PDO entries in PDO 0x1602
	if Execute_VES("call CAN_SDO_WRITE(5, 0x1602, 0, 8, 0)", 1117) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	' Set PDO entries in PDO 0x1602
	' Set number of PDO entries in PDO 0x1602
	' Zero number of entries in sync manager 2
	if Execute_VES("call CAN_SDO_WRITE(5, 0x1403, 1, 32, 0x80000000 +5+1024+ 0x100)",1111) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	' Set PDOs in sync manager 2
	' Zero number of PDO entries in PDO 0x1603
	if Execute_VES("call CAN_SDO_WRITE(5, 0x1603, 0, 8, 0)", 1118) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	' Set PDO entries in PDO 0x1603
	' Set number of PDO entries in PDO 0x1603
	' Zero number of entries in sync manager 3
	if Execute_VES("call CAN_SDO_WRITE(5, 0x1800, 1, 32, 0x80000000 +5+128+ 0x100)",1119) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	' Set PDOs in sync manager 3
	' Zero number of PDO entries in PDO 0x1A00
	if Execute_VES("call CAN_SDO_WRITE(5, 0x1A00, 0, 8, 0)", 1120) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	' Set PDO entries in PDO 0x1A00
	if Execute_VES("call CAN_SDO_WRITE(5, 0x1A00, 1, 32, 0x60410010)", 1121) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	SET_STATUS_PDO_DADD(5,0,0, 0)

	SET_STATUS_PDO_DADD(5, 128 + 0x100   ,0 , 2)

	if Execute_VES("call CAN_SDO_WRITE(5, 0x1A00, 2, 32, 0x60640020)", 1122) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	SET_PFB_PDO_DADD(5, 0, 0, 0)

	SET_PFB_PDO_DADD(5, 128 + 0x100   , 2  , 4)

	' Set number of PDO entries in PDO 0x1A00
	if Execute_VES("call CAN_SDO_WRITE(5, 0x1A00, 0, 8, 2)", 1120) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	' Set number of PDOs in the sync manager
	if Execute_VES("call CAN_SDO_WRITE(5, 0x1800, 1, 32, 5+128+ 0x100)",1119) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	call CAN_SDO_WRITE(5, 0x1800, 2, 8,1 )
	' Zero number of entries in sync manager 3
	if Execute_VES("call CAN_SDO_WRITE(5, 0x1801, 1, 32, 0x80000000 +5+384+ 0x100)",1119) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	' Set PDOs in sync manager 3
	' Zero number of PDO entries in PDO 0x1A01
	if Execute_VES("call CAN_SDO_WRITE(5, 0x1A01, 0, 8, 0)", 1123) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	' Set PDO entries in PDO 0x1A01
	if Execute_VES("call CAN_SDO_WRITE(5, 0x1A01, 1, 32, 0x60FD0020)", 1124) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	SET_DIN_RANGE_PDO_DADD(5,0,0,0,0,0,0)

	SET_DIN_RANGE_PDO_DADD(5, 384+0x100 ,0,4, 50000, 31,16)

	' Set number of PDO entries in PDO 0x1A01
	if Execute_VES("call CAN_SDO_WRITE(5, 0x1A01, 0, 8, 1)", 1123) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	' Set number of PDOs in the sync manager
	if Execute_VES("call CAN_SDO_WRITE(5, 0x1801, 1, 32, 5+384+ 0x100)",1119) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	call CAN_SDO_WRITE(5, 0x1801, 2, 8,1 )
	' Zero number of entries in sync manager 3
	if Execute_VES("call CAN_SDO_WRITE(5, 0x1802, 1, 32, 0x80000000 +5+640+ 0x100)",1119) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	' Set PDOs in sync manager 3
	' Zero number of PDO entries in PDO 0x1A02
	if Execute_VES("call CAN_SDO_WRITE(5, 0x1A02, 0, 8, 0)", 1125) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	' Set PDO entries in PDO 0x1A02
	' Set number of PDO entries in PDO 0x1A02
	' Zero number of entries in sync manager 3
	if Execute_VES("call CAN_SDO_WRITE(5, 0x1803, 1, 32, 0x80000000 +5+896+ 0x100)",1119) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	' Set PDOs in sync manager 3
	' Zero number of PDO entries in PDO 0x1A03
	if Execute_VES("call CAN_SDO_WRITE(5, 0x1A03, 0, 8, 0)", 1126) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

	' Set PDO entries in PDO 0x1A03
	' Set number of PDO entries in PDO 0x1A03
	if Execute_VES("call CAN_SDO_WRITE(5 ,0x6060,0,8,8)", 1110) <> 0 then
		PDO_Mapping_Device_5 = -1
		goto ERR_PDO_DEVICE_5
	end if

ERR_PDO_DEVICE_5:

End Function


' Configure device 5 via SDO writes
Function SDO_Config_Device_5 as long

	SDO_Config_Device_5 = 0

	print "PREOP configuration via SDO of device 5"
	print "Set MICRO INTERPOLATION in device 5"
	if Execute_VES("call CAN_SDO_WRITE(5, 0x60C0, 0, 16, 2)", 1127) <> 0 then
		SDO_Config_Device_5 = -1
		goto ERR_SDO_DEVICE_5
	end if

	print "Set Feed constant MotorRevs in device 5"
	if Execute_VES("call CAN_SDO_WRITE(5, 0x6092, 1, 32, 1000000)", 1128) <> 0 then
		SDO_Config_Device_5 = -1
		goto ERR_SDO_DEVICE_5
	end if

	print "Set Feed constant ShaftRevs in device 5"
	if Execute_VES("call CAN_SDO_WRITE(5, 0x6092, 2, 32, 1)", 1129) <> 0 then
		SDO_Config_Device_5 = -1
		goto ERR_SDO_DEVICE_5
	end if

	print "Set GearRatio MotorRevs in device 5"
	if Execute_VES("call CAN_SDO_WRITE(5, 0x6091, 1, 32, 1)", 1130) <> 0 then
		SDO_Config_Device_5 = -1
		goto ERR_SDO_DEVICE_5
	end if

	print "Set GearRatio ShaftRevs in device 5"
	if Execute_VES("call CAN_SDO_WRITE(5, 0x6091, 2, 32, 1)", 1131) <> 0 then
		SDO_Config_Device_5 = -1
		goto ERR_SDO_DEVICE_5
	end if

	print "Set Smoothing in device 5"
	if Execute_VES("call CAN_SDO_WRITE(5, 0x2109, 0, 16, 0)", 1132) <> 0 then
		SDO_Config_Device_5 = -1
		goto ERR_SDO_DEVICE_5
	end if

	print "Set Homing_Method in device 5"
	if Execute_VES("call CAN_SDO_WRITE(5, 0x6098, 0, 8, 35)", 1133) <> 0 then
		SDO_Config_Device_5 = -1
		goto ERR_SDO_DEVICE_5
	end if

	print "Set Digital Output Mask in device 5"
	if Execute_VES("call CAN_SDO_WRITE(5, 0x60FE, 2, 32, 0x3f0000)", 1134) <> 0 then
		SDO_Config_Device_5 = -1
		goto ERR_SDO_DEVICE_5
	end if

	print "Set Interpolation Time Index in device 5"
	if Execute_VES("call CAN_SDO_WRITE(5, 0x60C2, 2, 8, -3)", 1135) <> 0 then
		SDO_Config_Device_5 = -1
		goto ERR_SDO_DEVICE_5
	end if

ERR_SDO_DEVICE_5:

End Function


' Configure device 5 via SDO writes
Function OpSDO_Config_Device_5 as long

	OpSDO_Config_Device_5 = 0

	print "OP configuration via SDO of device 5"
OpERR_SDO_DEVICE_5:

End Function


' Associate PDO entries of device 5 with axis properties
Function Set_PDOe_To_AxProps_Device_5 as long

	Set_PDOe_To_AxProps_Device_5 = 0

	print "Associating between PDO entries of device 5 and axis properties"
ERR_PDOE_AXPROP_DEVICE_5:

End Function


function Execute_VES(byval command as string, byval err_code as long) as long

	dim retStr as string

	Execute_VES = 0
	CANSETUP_PRG_error_code = 0
	retStr = VesExecute(command)

	if INSTR(retStr, "E:Error") <> 0  then

		CANSETUP_PRG_error_code = err_code
		CANSETUP_PRG_error_str = retStr
		Execute_VES = -1

	end if

end function

